这是一个thrift的基础使用案例

对比与protobuf，proto的文件尽管也是可以跨系统，但是跨系统传播的只能是一个个的对象，也就是结构体，并不能作为一个远程方法调用的实现
也就是说protobuf 只能做为socket或者其他的传输方式，传输的结果，a系统的proto对象序列化之后传到b系统中，只能作为载体，压缩高
从而是的传播快，可以跨语言跨系统进行数据传输，提升效率，这也就是netty可以结合使用，从而使得netty可以更快速进行数据传输，传输的方式用nerry
但是传输的结构使用proto的

thrift 跟protobuf不一样的地方在于，thrift尽管也是跨语言传输，还可以跨系统传输，而且实现方式都是类似，但是有个更好的就是它能够传输请求方法
也就是请求的过程也可以通过thrift进行实现，这就是一个rpc的框架了，能够传输结构体还能够定义跨系统跨语言的请求方法，也就是一个通用的RPC框架

