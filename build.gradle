plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'
    // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.8'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def grpcVersion = '1.26.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.11.0'
def protocVersion = protobufVersion

repositories {
    mavenCentral()
}

dependencies {
    compile(
            "io.netty:netty-all:4.1.15.Final",
            "com.google.protobuf:protobuf-java:3.11.0",
            "com.google.protobuf:protobuf-java-util:3.11.0",
            "org.apache.thrift:libthrift:0.12.0",
            //protobuf 编译器
            "io.grpc:grpc-netty-shaded:1.27.1",
            "io.grpc:grpc-protobuf:1.27.1",
            "io.grpc:grpc-stub:1.27.1",
            //日志输出
            "org.slf4j:slf4j-api:1.7.10",
            "org.slf4j:slf4j-log4j12:1.7.10",
    )
}

//--------------------配置指定的protobuf的生成文件的文件目录以及包名-start----------------//

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java', 'generated-sources/main/java'
        }
    }
    // remove the test configuration - at least in your example you don't have a special test proto file
}


protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }

    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks.generatedFilesBaseDir = 'src'

    generateProtoTasks {
//        all()*.plugins { grpc {} }
        all()*.plugins {
            grpc {
                outputSubDir = 'java'
            }
        }
        all().each { task ->}
        ofSourceSet('main')
    }
}


//--------------------配置指定的protobuf的生成文件的文件目录以及包名-end----------------//

